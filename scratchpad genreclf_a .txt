import numpy as np

#non-binarized data (though we can evaluate > 0).
data = np.load('csc475_asn3_data/data.npz');
#print len(data['arr_0']); #len is 3000. ->>> HOW?!
#print len(data['arr_0'][0]); #len is 30 (one num per word.)
#print data['arr_0'];
#print;

#binarizing the data
#print 'binarization';
dataArray = data['arr_0'];
dataArray = np.where(dataArray <= 0, 0,1);
#print dataArray;
#print;

labels = np.load('csc475_asn3_data/labels.npz');
#print len(labels['arr_0']); #len is 3000 as well!!!
#print labels['arr_0'];
#print; 

#the 30 words that we need to check. -> 1-to-1 match with
#a word in the dictionary.
words = np.load('csc475_asn3_data/words.npz');
#print len(words['arr_0']); # len is 30.
print words['arr_0'];
print;

#how do we get the words out of the dictionary? for loop?
dictionary = np.load('csc475_asn3_data/dictionary.pck');
#print len(dictionary); # 5000 is len dictionary.
print dictionary[:10];
print;

print;
arrayOfWords = [];
#wtf
for i in words['arr_0']:
	arrayOfWords.append(dictionary[i]);
	print dictionary[i],;
print;

print arrayOfWords;

tracks = np.load('csc475_asn3_data/tracks.pck');
print len(tracks); #this is also 3000 !!!
print tracks[:4];
print;

#for word in dictionary:
#	for genre in genres:
#		counterForWordGenre1
#		counterForWordGenre2
#		counterForWordGenre3
#	    count number of instances that contain word
		
#		if(instance for GenreX has 1 for word):
#			counterForWordGenre1++;
			
		#i think P(word) is
		#the appearance of the word
		#across the three genres - (TOTAL).
		# is N_inst_with_Word / 3000;
		
		#P(genre)i think is 1/3 = 1000/3000 instances.
		
		#  from the general multiplication rule:
		#  P(A and B) = P(A) * P(B|A)

		#The probability that event B occurs, given that event A has already occurred is
		#P(B|A) = P(A and B) / P(A)
		#P(WORD|GENRE) = P(WORD and GENRE) / P(GENRE);
#		probabiltyWordGivenGenre1 = (counterForWordGenre1)/ P(genre1);
#		probabiltyWordGivenGenre2 = (counterForWordGenre2)/ P(genre2);
#		probabiltyWordGivenGenre3 = (counterForWordGenre3)/ P(genre3);

	




